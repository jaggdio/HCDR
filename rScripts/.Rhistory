path ="/home/jayphate/Desktop/gold_set_analysis/Contact_Us_Positive_Prediction Pg_Collated.csv"
data <- read.csv(path)
data <- read.csv(path, encoding = 'utf-8')
colnames(data)
dim(data)
data <- read.csv(path, encoding = 'utf-8')
data <- read.csv(path, encoding = 'utf-8', quote = "")
colnames(data)
dim(data)
data$url
length(data$url)
duplicated((data$url))
data$url[which(duplicated(data$url))]
d = data$url[which(duplicated(data$url))]
d[d!=""]
2561/60
addFilter <- read.csv(path)
addFilter <- read.csv(path, quote = "",
row.names = NULL,
stringsAsFactors = FALSE)
head(addFilter)
path <- "/home/jayphate/Documents/SMARTe/Projects/contactuspage_extractor/contactuspage_classification_and_extraction/input/vocabs/AdditionalFilters.csv"
path
addFilter <- read.csv(path, quote = "",
row.names = NULL,
stringsAsFactors = FALSE)
colnames(addFilter)
head(addFilter)
grep("\\w+", addFilter$splited)
grep("\\w+", addFilter$splited, value = TRUE)
grep("\\d+", addFilter$splited, value = TRUE)
grep("\\d+\\b", addFilter$splited, value = TRUE)
grep("^\\d+\\b", addFilter$splited, value = TRUE)
grep("^\\d+\\b$", addFilter$splited, value = TRUE)
length(grep("^\\d+\\b$", addFilter$splited, value = TRUE))
grep("^\\d+\\b$", addFilter$splited)
nw <- addFilter$splited[grep("^\\d+\\b$", addFilter$splited), ]
nw <- addFilter$splited[grep("^\\d+\\b$", addFilter$splited), :]
nw <- addFilter$splited[grep("^\\d+\\b$", addFilter$splited)]
dim(nw)
addFilter <- read.csv(path, quote = "",
row.names = NULL,
stringsAsFactors = FALSE)
head(addFilter)
colnames(addFilter)
nw <- addFilter[grep("^\\d+\\b$", addFilter$splited),]
dim(nw)
grep
help(grep)
nw <- addFilter[grep("^\\d+\\b$", addFilter$splited, invert = TRUE),]
dim(nw)
dim(addFilter)
dim(addFilter)
dim(nw)
outputpath <- "/home/jayphate/Documents/SMARTe/Projects/contactuspage_extractor/contactuspage_classification_and_extraction/input/vocabs/AdditionalFiltersNoDigit.csv"
write.csv(nw, outputpath, row.names = FALSE)
x = c(
"separated by single slash n",
"separated by single slash n
"separated by single slash n and spaces",
"separated by single slash n and &nbsp",
"separated by p tag",
"separated by p tag",
"separated by p tag and &nbsp",
"separated by p tag",
"correct",
"table",
"table",
"separated by p tag",
"separated by p tag",
"separated by two slash n and spaces",
"separated by p tag",
"difficult",
"not on web",
"separated by p tag",
"table then separated by p tag inside table",
"separated by p tag",
"correct",
"separated by p tag and header tag",
"separaetd by li tag and header tag",
"separaetd by li tag",
"separaetd by li tag, then p tag",
"separated by p tag",
"separated by p tag",
"separated by p tag and header tag",
"separated each line by p tag",
"separated each line by p tag",
"table",
"separated by p tag",
"table",
"table then separated by p tag inside table",
"separated by p tag",
"separated by p tag",
"separated by p tag",
"separated by p tag",
"separaetd by li tag and header tag",
"separaetd by li tag and header tag"
)
x = c(
"separated by single slash n",
"separated by single slash n",
"separated by single slash n and spaces",
"separated by single slash n and &nbsp",
"separated by p tag",
"separated by p tag",
"separated by p tag and &nbsp",
"separated by p tag",
"correct",
"table",
"table",
"separated by p tag",
"separated by p tag",
"separated by two slash n and spaces",
"separated by p tag",
"difficult",
"not on web",
"separated by p tag",
"table then separated by p tag inside table",
"separated by p tag",
"correct",
"separated by p tag and header tag",
"separaetd by li tag and header tag",
"separaetd by li tag",
"separaetd by li tag, then p tag",
"separated by p tag",
"separated by p tag",
"separated by p tag and header tag",
"separated each line by p tag",
"separated each line by p tag",
"table",
"separated by p tag",
"table",
"table then separated by p tag inside table",
"separated by p tag",
"separated by p tag",
"separated by p tag",
"separated by p tag",
"separaetd by li tag and header tag",
"separaetd by li tag and header tag"
)
table(x)
matrix(table(x))
table(x)
View(table(x))
path <- "/home/jayphate/Desktop/all_guids.txt"
al_guids <- read.csv(path)
dim(al_guids)
t = '717-823-701'
p = r'(\d\d\d[-\.\s]){2}' #\d{1,3}
p = r'(\\d\\d\\d[-\\.\\s]){2}' #\d{1,3}
p = '(\\d\\d\\d[-\\.\\s]){2}' #\d{1,3}
gsub(p, "*", t)
p = '(\\d\\d\\d[-\\.\\s]){3}' #\d{1,3}
gsub(p, "*", t)
p = '(\\d\\d\\d[-\\.\\s]){2,}' #\d{1,3}
gsub(p, "*", t)
p = '(\\d\\d\\d[-\\.\\s]){1}' #\d{1,3}
gsub(p, "*", t)
p = '(\\d\\d\\d[-\\.\\s]){3}' #\d{1,3}
gsub(p, "*", t)
p = '(\\d\\d\\d[-\\.\\s]?){3}' #\d{1,3}
gsub(p, "*", t)
p = '(\\d\\d\\d[-\\.\\s]?){2}' #\d{1,3}
gsub(p, "*", t)
p = '(\\d\\d\\d[-\\.\\s]?){1}' #\d{1,3}
gsub(p, "*", t)
p = '(\\d\\d\\d[-\\.\\s]?){3}' #\d{1,3}
gsub(p, "*", t)
path <- "/home/jayphate/Documents/Personal/someCode/home-credit-default-risk/rScripts"
setwd(path)
library(tidyverse)
library(xgboost)
library(magrittr)
install.packages("tidyverse")
library(tidyverse)
install.packages("xml2")
install.packages("xml2")
install.packages("rvest")
install.packages("rvest")
install.packages("rvest")
install.packages("httr")
install.packages("tidyverse")
library(tidyverse)
install.packages("xgboost")
library(xgboost)
library(magrittr)
set.seed(0)
#---------------------------
cat("Loading data...\n")
bbalance <- read_csv("../input/bureau_balance.csv")
bureau <- read_csv("../input/bureau.csv")
fn <- funs(mean, sd, min, max, sum, n_distinct, .args = list(na.rm = TRUE))
fn
?funs
b = bbalance %>%
mutate_if(is.character, funs(factor(.) %>% as.integer))
class(b)
dim(d)
head(d)
d
len(d)
head(b)
class(b)
colnames(b)
b.head()
b
head(b)
head(bbalance)
bg <- bbalance %>%
mutate_if(is.character, funs(factor(.) %>% as.integer)) %>%
group_by(SK_ID_BUREAU)
head(bg)
dim(bg)
dim(b)
sum_bbalance <- bbalance %>%
mutate_if(is.character, funs(factor(.) %>% as.integer)) %>%
group_by(SK_ID_BUREAU) %>%
summarise_all(fn)
